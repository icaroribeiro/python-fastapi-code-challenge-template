<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fbcc6e08-ecb9-4b0f-a95a-40f203ced3b8" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/../Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/../Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.env" beforeDir="false" afterPath="$PROJECT_DIR$/.env" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile.multi-stage" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile.multi-stage" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/__init__.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/application_container.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/application_container.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/controller/model/auth.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/controller/model/auth.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/domain/repository/auth.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/domain/repository/auth.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/controller/test_controller_fixtures.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/controller/test_controller_fixtures.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/domain/repository/auth/test_auth_repository_fixtures.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/domain/repository/auth/test_auth_repository_fixtures.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/infrastructure/database/test_database_session_manager_fixtures.py" beforeDir="false" afterPath="$PROJECT_DIR$/test/infrastructure/database/test_database_session_manager_fixtures.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../../docker-compose.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="5" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2ZKVEaMNLs5v0GzaRMsR5XkIeW6" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Python/workspace/src/github.com/icaroribeiro/watchers.xml&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;watcher.settings&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Python\workspace\src\github.com\icaroribeiro\new-python-code-challenge-template\backend\app\test\factory" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.pytest for controller.router.health.test_get_health_get.TestGetHealthGet.test_get_status_should_succeed_in_getting_the_status">
    <configuration name="pytest for controller.router.health.test_get_health_get.TestGetHealthGet" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="app" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;controller.router.health.test_get_health_get.TestGetHealthGet&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for controller.router.health.test_get_health_get.TestGetHealthGet.test1" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="app" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;controller.router.health.test_get_health_get.TestGetHealthGet.test1&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for controller.router.health.test_get_health_get.TestGetHealthGet.test_1" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="app" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;controller.router.health.test_get_health_get.TestGetHealthGet.test_1&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for controller.router.health.test_get_health_get.TestGetHealthGet.test_get_status_should_succeed_in_getting_the_status" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="app" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;controller.router.health.test_get_health_get.TestGetHealthGet.test_get_status_should_succeed_in_getting_the_status&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for service.health.test_check_health.TestCheckHealth" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="app" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;service.health.test_check_health.TestCheckHealth&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest for controller.router.health.test_get_health_get.TestGetHealthGet.test_get_status_should_succeed_in_getting_the_status" />
        <item itemvalue="Python tests.pytest for controller.router.health.test_get_health_get.TestGetHealthGet.test_1" />
        <item itemvalue="Python tests.pytest for controller.router.health.test_get_health_get.TestGetHealthGet" />
        <item itemvalue="Python tests.pytest for controller.router.health.test_get_health_get.TestGetHealthGet.test1" />
        <item itemvalue="Python tests.pytest for service.health.test_check_health.TestCheckHealth" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fbcc6e08-ecb9-4b0f-a95a-40f203ced3b8" name="Changes" comment="" />
      <created>1702170647099</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1702170647099</updated>
    </task>
    <servers />
  </component>
</project>